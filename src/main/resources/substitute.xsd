<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified"
  xmlns="http://nationalarchives.gov.uk/dri/substitute"
  targetNamespace="http://nationalarchives.gov.uk/dri/substitute">
  
  <xs:element name="substitute">
    <xs:annotation>
      <xs:documentation>
        Describes a Substitute request
      </xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="source"/>
        <xs:element ref="destination"/>
      </xs:sequence>
      <xs:attribute name="cache" type="xs:boolean" default="false">
        <xs:annotation>
          <xs:documentation>
            If the cache flag is set:
            
            1) If this is the first substitution for this file,
            then the result will be kept in an on-disk cache.
            
            2) If this is 1+n request for this file,
            then the file will not be re-rendered
            and the result may be served from an on-disk cache. 
          </xs:documentation>
        </xs:annotation>
      </xs:attribute>
    </xs:complexType>
  </xs:element>
  
  <xs:element name="substituted">
    <xs:annotation>
      <xs:documentation>Describes the response of processing a substitute request</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:choice>
        <xs:element ref="result"/>
        <xs:element ref="error"/>
      </xs:choice>
    </xs:complexType>
  </xs:element>
  
  <xs:element name="source" type="sourceType"/>
  
  <xs:complexType name="sourceType">
    <xs:sequence>
      <xs:element ref="puid" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            If ommitted, then automatic file type identification
            will be attempted using DROID 6.2. If automatic file type
            identification fails, then the request will fail.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="path" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The path element is optional as the binary file
            may be provided is some direct way (e.g. multipart http request)
            as opposed to as a local file.
          </xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  
  <xs:element name="puid" type="puidType">
    <xs:annotation>
      <xs:documentation>PRONOM Unique Identifier</xs:documentation>
    </xs:annotation>
  </xs:element>
  
  <xs:simpleType name="puidType">
    <xs:restriction base="xs:anyURI">
      <xs:pattern value="info:pronom/.*"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:element name="path" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>A valid file system path accessible to the substitute server process.</xs:documentation>
    </xs:annotation>
  </xs:element>
  
  <xs:element name="destination" type="destinationType"/>
    
  <xs:complexType name="destinationType">
    <xs:sequence>
      <xs:element ref="puid"/>
      <xs:element ref="path" minOccurs="0">
        <xs:annotation>
          <xs:documentation>
            The absolute file system folder path to write the substitute file to, must be accessible by the substitute server process.
            If not provided, the file will be provided in some direct way (e.g. multipart http response) as opposed to as a local file.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="thumbnails" minOccurs="0"/>
    </xs:sequence>
  </xs:complexType>
  
  <xs:element name="thumbnails" type="thumbnailsType">
    <xs:annotation>
      <xs:documentation>Describes thumbnail(s) to be generated</xs:documentation>
    </xs:annotation>
  </xs:element>
  
  <xs:complexType name="thumbnailsType">
    <xs:sequence>
      <xs:element ref="thumbnail" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  
  <xs:element name="thumbnail" type="thumbnailType"/>
  
  <xs:complexType name="thumbnailType">
    <xs:annotation>
      <xs:documentation>
        To generate a thumbnail, a width or a height or both have to be provided.
        The source image will be scaled maintaining its aspect ratio so that it fits inside
        the dimensions of the thumbnail.
      </xs:documentation>
    </xs:annotation>
    
    <xs:choice>
      <xs:sequence>
        <xs:element ref="width"/>
        <xs:element ref="height" minOccurs="0"/>
      </xs:sequence>
      <xs:element ref="height"/>
    </xs:choice>
  </xs:complexType>
  
  <xs:element name="width" type="pixelDimensionType"/>
  <xs:element name="height" type="pixelDimensionType"/>
  
  <xs:simpleType name="pixelDimensionType">
    <xs:restriction base="xs:positiveInteger"/>
  </xs:simpleType>
  
  <xs:element name="result" type="resultType"/>
    
  <xs:complexType name="resultType">
    <xs:sequence>
      <xs:element ref="uuid">
        <xs:annotation>
          <xs:documentation>The Unique ID of the substitute.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element ref="path" minOccurs="0" maxOccurs="unbounded">
        <xs:annotation>
          <xs:documentation>
            The absolute file system path to the substitute file(s), as written by the substitute server process.
            Only present if a file is used as the source or requested as the destination.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="from-cache" type="xs:boolean" use="required">
      <xs:annotation>
        <xs:documentation>Was this result served from the cache?</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  
  <xs:element name="uuid" type="uuidv4Type"/>
  
  <xs:simpleType name="uuidv4Type">
    <xs:annotation>
      <xs:documentation>Represents a Universally Unique Identifier version 4</xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}"/>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:element name="error" type="errorType"/>
  
  <xs:complexType name="errorType">
    <xs:sequence>
      <xs:element ref="errorCode"/>
      <xs:element ref="errorMessage"/>
    </xs:sequence>  
  </xs:complexType>
  
  <xs:element name="errorCode" type="errorCodeType"/>
    
  <xs:simpleType name="errorCodeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ES0001">
        <xs:annotation>
          <xs:documentation>TODO</xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  
  <xs:element name="errorMessage" type="xs:string"/>
  
</xs:schema>